#!/bin/sh

# -----------------------------------------------------------------------------
# make_config.sh - Create a configuration file for the application.
#
# Usage: ./make_config.sh [--development | --testing | --production]
# -----------------------------------------------------------------------------

SCRIPT_NAME=`basename "$0"`
CURRENT_DIR=`pwd`

if [ -f $SCRIPT_NAME ]; then
    SOURCE_DIR=..
else
    SOURCE_DIR=.
fi

CONFIG_DIR=$SOURCE_DIR/config
CONFIG_MODE=$1

if [ -z $CONFIG_MODE ]; then
    echo "Error. Please specify a configuration mode (--development, --testing, --production)"
    exit 1
fi

# Purge the original config module
if [ -d $CONFIG_DIR ]; then
    rm -Rf $CONFIG_DIR
fi

case $CONFIG_MODE in
    --development ) 
        read -p "Please specify the URI for the development database and hit Enter => " DATABASE_URI 
        DEBUG=True
        TESTING=False
        ;;
    --testing ) 
        read -p "Please specify the URI for the testing database and hit Enter => " DATABASE_URI 
        DEBUG=False
        TESTING=True
        ;;
    --production ) 
        read -p "Please specify the URI for the production database and hit Enter => " DATABASE_URI 
        DEBUG=False
        TESTING=False
        ;;
    * ) echo "Invalid configuration mode (${CONFIG_MODE}), select one of: --development, --testing, --production"
        exit 1
        ;;
esac

# Build the config module
mkdir $CONFIG_DIR
cd $CONFIG_DIR
touch __init__.py
touch config.py

cat <<EOF >> ./config.py
# -*- coding: utf-8 -*-

"""Configuration object for Open Skills API.

Generated by ${SCRIPT_NAME} with mode ${CONFIG_MODE}

"""

class Config(object):
    DEBUG = ${DEBUG}
    TESTING = ${TESTING}
    SQLALCHEMY_TRACK_MODIFICATIONS = False
    CSRF_ENABLED = True
    SQLALCHEMY_DATABASE_URI = '${DATABASE_URI}'
EOF

# All done, return to the home directory.
cd $CURRENT_DIR
echo "Application configuration completed. WARNING: Please DO NOT add the api_config module to the code repo as it may expose credentials!"
exit 0
